# This is a basic workflow that is manually triggered

name: Create Release

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      versionName:
        description: 'Version (ie 0.0.1)'
        required: true
      dockerRegistry:
        description: 'dockerhub/applicationName'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  create_release_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Create release branch
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          git config --global user.email "emerson-developer@outlook.com"
          git config --global user.name "Emerson Oliveira"
          REPO_URL=$(git config --get remote.origin.url)
          REPO_URL_WITH_PAT=${REPO_URL/https:\/\/github.com\//https:\/\/${{ secrets.PAT }}@github.com/}
          git remote set-url origin $REPO_URL_WITH_PAT
          git checkout master
          git pull origin master
          git checkout -b release/${{ github.event.inputs.versionName }}
          git push origin release/${{ github.event.inputs.versionName }}
  build:
    runs-on: ubuntu-latest
    needs: create_release_branch
    steps:
      - uses: actions/checkout@v3

      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: Criando Imagem docker
        run: |
          docker build -t ${{ github.event.inputs.dockerRegistry }}:latest -t ${{ github.event.inputs.dockerRegistry }}:${{ github.event.inputs.versionName }} ./

      - name: Docker Push latest
        run: docker push ${{ github.event.inputs.dockerRegistry }}:latest

      - name: Docker Push versioned
        run: docker push ${{ github.event.inputs.dockerRegistry }}:${{ github.event.inputs.versionName }}
